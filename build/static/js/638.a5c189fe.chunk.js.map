{"version":3,"file":"static/js/638.a5c189fe.chunk.js","mappings":"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","sources":["modules/comic/ComicList/ComicCarousel.tsx","modules/comic/ComicList/index.tsx","modules/comic/ComicSlider/PreviewDesc.tsx","modules/comic/ComicSlider/ComicSwiper.tsx","modules/comic/ComicSlider/ComicBanner.tsx","modules/comic/pages/HomePage.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport ComicCard from './ComicCard';\r\nimport 'swiper/css';\r\nimport { ChapTotal, IComicInfo } from '../../../models/comic';\r\ninterface Props {\r\n  data: IComicInfo[];\r\n  title: string;\r\n  chapTotal?: ChapTotal[];\r\n  sortType: string;\r\n}\r\n\r\nconst ComicCarousel: FC<Props> = ({ data, title, sortType, chapTotal }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.titleSection}>\r\n        <Typography variant=\"h4\">{title}</Typography>\r\n      </div>\r\n      <Swiper id=\"swiper\" slidesPerView={sortType !== 'vote' ? 7 : 4} className={classes.swiper} spaceBetween={24}>\r\n        {data.map((item: IComicInfo) => (\r\n          <SwiperSlide key={item.id} style={{ width: sortType !== 'vote' ? '152px' : '260px' }}>\r\n            <ComicCard chapTotal={chapTotal} comic={item} sortType={sortType} />\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComicCarousel;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    maxWidth: '1200px',\r\n    width: '100%',\r\n    zIndex: 1,\r\n  },\r\n  swiper: {\r\n    width: '100%',\r\n    '& .swiper-wrapper': {\r\n      padding: '16px 0',\r\n    },\r\n  },\r\n  titleSection: {\r\n    zIndex: 0,\r\n    marginBottom: '24px',\r\n    textTransform: 'capitalize',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  viewAllPath: {\r\n    textTransform: 'uppercase',\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    fontWeight: 500,\r\n    fontSize: '14px',\r\n  },\r\n  loading: {\r\n    height: `calc(336px - ${theme.spacing(16)}px)`,\r\n    width: '100%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      height: `calc(336px - ${theme.spacing(14)}px)`,\r\n    },\r\n  },\r\n}));\r\n","import React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport ComicCarousel from './ComicCarousel';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Action } from 'redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\n\r\nimport { fetchThunk } from '../common/redux/thunk';\r\nimport { API_PATHS } from '../../../configs/api';\r\nimport { ChapTotal, IComicInfo } from '../../../models/comic';\r\nimport { AppState } from '../../../redux/reducer';\r\nimport Loader from '../../../components/Loader';\r\n\r\ninterface Props {}\r\n\r\nconst ComicList: FC<Props> = () => {\r\n  const classes = useStyles();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [newReleaseBooks, setNewReleaseBooks] = useState<IComicInfo[]>([]);\r\n  const [newReleaseBooksChapter, setNewReleaseBooksChapter] = useState<IComicInfo[]>([]);\r\n  const [topBooks, setTopBooks] = useState<IComicInfo[]>([]);\r\n  const [actionBooks, setActionBooks] = useState<IComicInfo[]>([]);\r\n  const [chapTotal, setChapTotal] = useState<ChapTotal[]>([]);\r\n  const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\r\n  const getNewReleaseBooks = useCallback(async () => {\r\n    const json = await dispatch(fetchThunk(API_PATHS.newReleaseBook, 'get'));\r\n    setNewReleaseBooks([...json.data]);\r\n  }, [dispatch]);\r\n  const getNewReleaseBooksChapter = useCallback(async () => {\r\n    const json = await dispatch(fetchThunk(API_PATHS.newReleaseBookChapter, 'get'));\r\n    const books = json.data.map((item: any) => {\r\n      const { Book, ...Chap } = item;\r\n      return { ...Book, Chaps: [Chap] };\r\n    });\r\n    setNewReleaseBooksChapter(books);\r\n  }, [dispatch]);\r\n  const getTopBooks = useCallback(async () => {\r\n    const json = await dispatch(fetchThunk(API_PATHS.topBook, 'get'));\r\n    setTopBooks([...json.data.books]);\r\n    setChapTotal([...json.data.chapTotal]);\r\n  }, [dispatch]);\r\n  const getActionBooks = useCallback(async () => {\r\n    const json = await dispatch(fetchThunk(API_PATHS.actionBook, 'get'));\r\n    setActionBooks([...json.data]);\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    getNewReleaseBooks();\r\n    getNewReleaseBooksChapter();\r\n    getTopBooks();\r\n    getActionBooks();\r\n    setIsLoading(false);\r\n  }, [getActionBooks, getNewReleaseBooks, getNewReleaseBooksChapter, getTopBooks]);\r\n  return (\r\n    <div className={classes.root}>\r\n      {isLoading && <Loader />}\r\n      <ComicCarousel data={newReleaseBooks} title=\"Truyện mới cập nhật\" sortType=\"popular\" />\r\n      <ComicCarousel data={newReleaseBooksChapter} title=\"Chapter mới cập nhật\" sortType=\"newChapter\" />\r\n      <ComicCarousel data={topBooks} chapTotal={chapTotal} title=\"Truyện nhiều người ưa thích\" sortType=\"vote\" />\r\n      <ComicCarousel data={actionBooks} title=\"Truyện hành động\" sortType=\"popular\" />\r\n      {/* {comicList && <ComicCarousel data={comicList} title=\"Truyện phiêu lưu\" sortType=\"popular\" />}\r\n      {comicList && <ComicCarousel data={comicList} title=\"Truyện ngôn tình\" sortType=\"popular\" />} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComicList;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: '0px 4px',\r\n    },\r\n  },\r\n}));\r\n","import React, { FC } from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { Box, Typography, Chip, Button } from '@mui/material';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { IComicInfo } from '../../../models/comic';\r\nimport { IAuthorInfo } from '../../../models/author';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Action } from 'redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { generateReadComicLink, sortObj } from '../../../utils/generalHelpers';\r\nimport { IChapInfo } from '../../../models/chap';\r\nimport { setComicInfoAction } from '../ComicReader/redux/comicReaderReducer';\r\nimport { AppState } from '../../../redux/reducer';\r\ninterface Props {\r\n  comic: IComicInfo;\r\n}\r\n\r\nconst PreviewDesc: FC<Props> = ({ comic }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box height=\"100px\">\r\n        <Typography className={classes.title} variant=\"h4\">\r\n          {comic?.name}\r\n        </Typography>\r\n      </Box>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Typography mr=\"10px\">Tác giả:</Typography>\r\n        <Swiper id=\"swiper\" className={classes.swiper} slidesPerView=\"auto\" spaceBetween={8}>\r\n          {comic?.Authors?.map((author: IAuthorInfo) => (\r\n            <SwiperSlide key={author.id}>\r\n              <Chip\r\n                sx={{\r\n                  bgcolor: '#ff8a80',\r\n                  '&:hover': {\r\n                    backgroundColor: '#ef9a9a',\r\n                  },\r\n                }}\r\n                label={author.name}\r\n                component=\"a\"\r\n                href=\"#basic-chip\"\r\n                clickable\r\n              />\r\n            </SwiperSlide>\r\n          ))}\r\n        </Swiper>\r\n      </Box>\r\n      <Box display=\"flex\" mt={1}>\r\n        <Typography mr={1}>Lượt xem</Typography>\r\n        <VisibilityIcon />\r\n        {':'}\r\n        <Typography ml=\"10px\">{comic?.viewCount}</Typography>\r\n      </Box>\r\n      <Box display=\"flex\" mt={2}>\r\n        <Typography mr={1}>Lượt thích</Typography>\r\n        <FavoriteIcon />\r\n        {':'}\r\n        <Typography ml=\"10px\">{comic?.voteCount}</Typography>\r\n      </Box>\r\n      <Button\r\n        size=\"small\"\r\n        onClick={() => {\r\n          if (comic && comic.Chaps) {\r\n            const comicChapList: IChapInfo[] = sortObj(comic.Chaps, 'chapName', true).reverse();\r\n            dispatch(setComicInfoAction({ ...comic }));\r\n            navigate(generateReadComicLink(comic.name, comicChapList[0].chapName, comicChapList[0].id!));\r\n          }\r\n        }}\r\n        className={classes.readingButton}\r\n        variant=\"contained\"\r\n        disableElevation\r\n      >\r\n        Đọc ngay\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewDesc;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '328px',\r\n    padding: '0 12px',\r\n    flexShrink: 0,\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  title: {\r\n    maxWidth: '100%',\r\n    maxHeight: '72px',\r\n    wordBreak: 'break-word',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    display: '-webkit-box',\r\n    '-webkit-line-clamp': '3',\r\n    'line-clamp': '3',\r\n    '-webkit-box-orient': 'vertical',\r\n  },\r\n  readingButton: {\r\n    marginTop: '16px',\r\n    backgroundColor: '#ff8a80',\r\n    color: 'black',\r\n    fontSize: '18px',\r\n    '&:hover': {\r\n      backgroundColor: '#ef9a9a',\r\n    },\r\n  },\r\n  swiper: {\r\n    flex: 1,\r\n  },\r\n}));\r\n","import React, { FC, useEffect, useRef, useState } from 'react';\r\nimport ChevronLeft from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRight from '@mui/icons-material/ChevronRight';\r\nimport Fab from '@mui/material/Fab';\r\nimport cn from 'classnames';\r\nimport SwiperCore, { Autoplay, Controller, Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { NavigationOptions } from 'swiper/types';\r\nimport 'swiper/css';\r\nimport './style.scss';\r\nimport PreviewDesc from './PreviewDesc';\r\nimport { IComicInfo } from '../../../models/comic';\r\n\r\ninterface Props {\r\n  comicList: IComicInfo[];\r\n}\r\n\r\nSwiperCore.use([Navigation, Autoplay, Controller]);\r\nconst SLIDE_WIDTH = 136;\r\nconst slideSpeed = 4000;\r\n\r\nconst ComicSwiper: FC<Props> = ({ comicList }) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [controlledSwiper, setControlledSwiper] = useState<SwiperCore>();\r\n  const navigationPrevRef = useRef(null);\r\n  const navigationNextRef = useRef(null);\r\n  const changeSlide = (index: number) => {\r\n    controlledSwiper?.slideTo(index);\r\n    setActiveIndex(index);\r\n  };\r\n  const getComicPreviewImage = (comic: IComicInfo) => {\r\n    return comic?.image;\r\n  };\r\n  const backgroundImageUrl = getComicPreviewImage(comicList[activeIndex]);\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    if (controlledSwiper) {\r\n      const autoPlay = setInterval(() => {\r\n        if (activeIndex === comicList.length - 1) {\r\n          controlledSwiper.slideTo(0);\r\n          setActiveIndex(0);\r\n        } else {\r\n          controlledSwiper.slideTo(activeIndex + 1);\r\n          setActiveIndex((prev) => prev + 1);\r\n        }\r\n      }, slideSpeed);\r\n\r\n      return () => {\r\n        clearInterval(autoPlay);\r\n      };\r\n    }\r\n  }, [activeIndex, controlledSwiper]);\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        style={{\r\n          transition: 'all 300ms',\r\n          backgroundImage: `linear-gradient(rgba(250, 250, 250, 0.64) 0%, rgb(255 255 255) 100%), url(${backgroundImageUrl})`,\r\n        }}\r\n        className={classes.bgImage}\r\n      />\r\n      <div className={classes.bannerWrapper}>\r\n        <PreviewDesc comic={comicList[activeIndex]} />\r\n        <div className={classes.swiperWrap}>\r\n          <Swiper\r\n            className={classes.swiper}\r\n            controller={{ control: controlledSwiper }}\r\n            onSwiper={setControlledSwiper}\r\n            slidesPerView={5}\r\n            spaceBetween={16}\r\n            direction=\"horizontal\"\r\n            slideToClickedSlide\r\n            navigation={{\r\n              prevEl: navigationPrevRef.current,\r\n              nextEl: navigationNextRef.current,\r\n            }}\r\n            onBeforeInit={(swiper: SwiperCore) => {\r\n              (swiper.params.navigation as NavigationOptions).prevEl = navigationPrevRef.current;\r\n              (swiper.params.navigation as NavigationOptions).nextEl = navigationNextRef.current;\r\n            }}\r\n          >\r\n            <Fab\r\n              size=\"small\"\r\n              className={cn(classes.navNext, classes.nav, {\r\n                [classes.hidden]: activeIndex === comicList.length - 1,\r\n              })}\r\n              ref={navigationNextRef}\r\n              color=\"secondary\"\r\n              onClick={() => changeSlide(activeIndex + 1)}\r\n            >\r\n              <ChevronRight fontSize=\"medium\" />\r\n            </Fab>\r\n            <Fab\r\n              size=\"small\"\r\n              className={cn(classes.navPrev, classes.nav, { [classes.hidden]: activeIndex === 0 })}\r\n              ref={navigationPrevRef}\r\n              color=\"secondary\"\r\n              onClick={() => changeSlide(activeIndex - 1)}\r\n            >\r\n              <ChevronLeft fontSize=\"medium\" />\r\n            </Fab>\r\n            {comicList.map((comic: IComicInfo, index: number) => (\r\n              <SwiperSlide onClick={() => changeSlide(index)} style={{ width: '136px' }} key={comic.id}>\r\n                <img\r\n                  className={cn(classes.imageCard, { [classes.activeSlide]: index == activeIndex })}\r\n                  src={comic.image}\r\n                  alt={comic.name}\r\n                />\r\n              </SwiperSlide>\r\n            ))}\r\n            <div className={classes.pagination}>\r\n              {comicList.map((comic: IComicInfo, index: number) => {\r\n                return (\r\n                  <span\r\n                    key={comic.id}\r\n                    onClick={() => changeSlide(index)}\r\n                    className={cn(classes.paginationBullet, {\r\n                      [classes.paginationActive]: index === activeIndex,\r\n                    })}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </Swiper>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComicSwiper;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingTop: '128px ',\r\n    paddingBottom: '68px',\r\n    position: 'relative',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('sm')]: {\r\n      justifyContent: 'flex-start',\r\n      alignItems: 'unset',\r\n    },\r\n  },\r\n  bgImage: {\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center center',\r\n    backgroundSize: 'cover',\r\n    position: 'absolute',\r\n    height: '100%',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    zIndex: 0,\r\n  },\r\n  bannerWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    maxWidth: '1200px',\r\n    zIndex: 1,\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column-reverse',\r\n      justifyContent: 'space-between',\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  swiperWrap: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end',\r\n    alignSelf: 'end',\r\n    padding: '0 12px',\r\n    minWidth: 0,\r\n    width: '100%',\r\n  },\r\n  swiper: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  imageCard: {\r\n    height: '192px',\r\n    width: `${SLIDE_WIDTH}px`,\r\n    borderRadius: '8px',\r\n    objectFit: 'cover',\r\n    cursor: 'pointer',\r\n  },\r\n  activeSlide: {\r\n    transition: 'all 100ms',\r\n    border: `4px solid ${theme.palette.secondary.main}`,\r\n    boxSizing: 'border-box',\r\n  },\r\n  nav: {\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    zIndex: 10,\r\n    cursor: 'pointer',\r\n    top: '35%',\r\n  },\r\n  navNext: {\r\n    right: '8px',\r\n  },\r\n  navPrev: {\r\n    left: '8px',\r\n  },\r\n  hidden: {\r\n    display: 'none',\r\n  },\r\n  pagination: {\r\n    marginInline: 'auto',\r\n    marginTop: '14px',\r\n  },\r\n  paginationBullet: {\r\n    width: '8px',\r\n    height: '8px',\r\n    display: 'inline-block',\r\n    borderRadius: '50%',\r\n    backgroundColor: theme.palette.grey[800],\r\n    marginRight: '12px',\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginRight: '8px',\r\n    },\r\n    cursor: 'pointer',\r\n  },\r\n  paginationActive: {\r\n    background: '#fb8c00 ',\r\n    opacity: '1',\r\n  },\r\n}));\r\n","import React, { FC } from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport ComicSwiper from './ComicSwiper';\r\nimport { IComicInfo } from '../../../models/comic';\r\n\r\ninterface Props {\r\n  comicList: IComicInfo[];\r\n}\r\n\r\nconst ComicBanner: FC<Props> = ({ comicList }) => {\r\n  const classes = useStyles();\r\n  return <ComicSwiper comicList={comicList} />;\r\n};\r\n\r\nexport default ComicBanner;\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n","import React, { FC, useCallback, useState, useEffect } from 'react';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { Action } from 'redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport ComicLayout from '../../../layout/ComicLayout';\r\nimport ComicList from '../ComicList';\r\nimport ComicBanner from '../ComicSlider/ComicBanner';\r\nimport { fetchThunk } from '../common/redux/thunk';\r\nimport { API_PATHS } from '../../../configs/api';\r\nimport { IComicInfo } from '../../../models/comic';\r\nimport { AppState } from '../../../redux/reducer';\r\nimport Loader from '../../../components/Loader';\r\n\r\ninterface Props {}\r\n\r\nconst HomePage: FC<Props> = () => {\r\n  const [comicList, setComicList] = useState<IComicInfo[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\r\n  const getComics = useCallback(async () => {\r\n    setIsLoading(true);\r\n    const json = await dispatch(fetchThunk(API_PATHS.popularBook, 'get'));\r\n    setComicList([...json.data]);\r\n    setIsLoading(false);\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    getComics();\r\n  }, [getComics]);\r\n\r\n  return (\r\n    <ComicLayout isReadScreen={false}>\r\n      {isLoading && <Loader />}\r\n      <ComicBanner comicList={comicList} />\r\n      <ComicList />\r\n    </ComicLayout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["data","title","sortType","chapTotal","classes","useStyles","className","root","titleSection","Typography","variant","id","slidesPerView","swiper","spaceBetween","map","item","style","width","ComicCard","comic","makeStyles","theme","display","flexDirection","maxWidth","zIndex","padding","marginBottom","textTransform","justifyContent","alignItems","viewAllPath","color","palette","primary","main","textDecoration","fontWeight","fontSize","loading","height","spacing","breakpoints","down","useState","isLoading","setIsLoading","newReleaseBooks","setNewReleaseBooks","newReleaseBooksChapter","setNewReleaseBooksChapter","topBooks","setTopBooks","actionBooks","setActionBooks","setChapTotal","dispatch","useDispatch","getNewReleaseBooks","useCallback","fetchThunk","API_PATHS","json","getNewReleaseBooksChapter","books","Book","Chap","Chaps","getTopBooks","getActionBooks","useEffect","Loader","navigate","useNavigate","Box","name","mr","Authors","author","Chip","sx","bgcolor","backgroundColor","label","component","href","clickable","mt","Visibility","ml","viewCount","Favorite","voteCount","Button","size","onClick","comicChapList","sortObj","reverse","setComicInfoAction","generateReadComicLink","chapName","readingButton","disableElevation","flexShrink","maxHeight","wordBreak","overflow","textOverflow","marginTop","flex","SwiperCore","Navigation","Autoplay","Controller","comicList","activeIndex","setActiveIndex","controlledSwiper","setControlledSwiper","navigationPrevRef","useRef","navigationNextRef","changeSlide","index","slideTo","backgroundImageUrl","image","autoPlay","setInterval","length","prev","clearInterval","transition","backgroundImage","bgImage","bannerWrapper","swiperWrap","controller","control","onSwiper","direction","slideToClickedSlide","navigation","prevEl","current","nextEl","onBeforeInit","params","Fab","cn","navNext","nav","hidden","ref","ChevronRight","navPrev","ChevronLeft","imageCard","activeSlide","src","alt","pagination","paginationBullet","paginationActive","paddingTop","paddingBottom","position","backgroundRepeat","backgroundPosition","backgroundSize","top","left","right","alignSelf","minWidth","borderRadius","objectFit","cursor","border","secondary","boxSizing","marginInline","grey","marginRight","background","opacity","setComicList","getComics","ComicLayout","isReadScreen"],"sourceRoot":""}